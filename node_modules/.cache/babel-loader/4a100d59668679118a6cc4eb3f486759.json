{"ast":null,"code":"var _jsxFileName = \"/Users/keonohkim/Desktop/movie_app_react/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\"; // https://yts-proxy.now.sh/... the ... can be used same as original YTS API\n// Nomad Coder API is from YTS but as YTS's URL cotinuously changes Nomad Coder manipulated to continuously provide json data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      // as axios.get requires time and JS renders before getting the data so use await to stop for a moment\n      // and as await cannot be used only by it self, async must be used together\n      // ES6 format: {data: {data: {movies}}} --> need more time to understand\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"loader__text\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n          title: movie.title,\n          year: movie.year,\n          summary: movie.summary,\n          poster: movie.medium_cover_image\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/keonohkim/Desktop/movie_app_react/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","render","map","movie","title","year","summary","medium_cover_image","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAKhCC,SALgC,GAKpB,YAAY;AACtB;AACA;AACA;AACA,YAAM;AAACC,QAAAA,IAAI,EAAE;AAACA,UAAAA,IAAI,EAAE;AAACF,YAAAA;AAAD;AAAP;AAAP,UAA2B,MAAMN,KAAK,CAACS,GAAN,CAAU,0DAAV,CAAvC;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAF;AAAUD,QAAAA,SAAS,EAAE;AAArB,OAAd;AACD,KAX+B;AAAA;;AAYhCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,SAAL;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAwB,KAAKF,KAAnC;AACA,wBAAQ;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,gBACLC,SAAS,gBAER;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,+BACE;AAAM,UAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFQ,gBAOR;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,kBACGC,MAAM,CAACO,GAAP,CAAWC,KAAK,iBACf,QAAC,KAAD;AAAsB,UAAA,KAAK,EAAEA,KAAK,CAACC,KAAnC;AAA0C,UAAA,IAAI,EAAED,KAAK,CAACE,IAAtD;AAA4D,UAAA,OAAO,EAAEF,KAAK,CAACG,OAA3E;AAAoF,UAAA,MAAM,EAAEH,KAAK,CAACI;AAAlG,WAAYJ,KAAK,CAACK,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AARI;AAAA;AAAA;AAAA;AAAA,YAAR;AAgBD;;AAjC+B;;AAqClC,eAAejB,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\n// https://yts-proxy.now.sh/... the ... can be used same as original YTS API\n// Nomad Coder API is from YTS but as YTS's URL cotinuously changes Nomad Coder manipulated to continuously provide json data\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    // as axios.get requires time and JS renders before getting the data so use await to stop for a moment\n    // and as await cannot be used only by it self, async must be used together\n    // ES6 format: {data: {data: {movies}}} --> need more time to understand\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false })\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (<section class=\"container\">\n      {isLoading\n      ? (\n        <div class=\"loader\">\n          <span class=\"loader__text\">Loading...</span>\n        </div>\n      )\n      : (\n        <div class=\"movies\">\n          {movies.map(movie => (\n            <Movie key={movie.id} title={movie.title} year={movie.year} summary={movie.summary} poster={movie.medium_cover_image} />\n          ))}\n        </div>\n      )\n      }\n    </section>); \n  }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}